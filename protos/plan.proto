syntax = "proto3";

package io.arl.proto.model;

import "common.proto";
import "task.proto";

// PlanResult represents the output of a Plan execution
message PlanResult {
  // Upstream TaskResult objects that led to this plan decision
  repeated io.arl.proto.model.TaskResult upstream_tasks_results = 1;
  
  // Names of the next tasks to execute
  repeated string next_task_names = 2;
  
  // Optional error message if planning failed
  string error_message = 3;
}

// PlanExecution represents a single Plan execution with metadata
message PlanExecution {
  // Common execution metadata
  io.arl.proto.model.ExecutionHeader header = 1;
  
  // IDs of parent task executions
  repeated string parent_task_exec_ids = 2;
  
  // Plan-specific result data
  PlanResult result = 3;
  
  // Names of parent tasks
  repeated string parent_task_names = 4;
}

// PlanInput represents the input data for a Plan execution
message PlanInput {
  // Unique identifier for this input
  string input_id = 1;
  
  // Name of the plan to execute
  string plan_name = 2;
  
  // Task executions that provide input to this plan
  repeated io.arl.proto.model.TaskExecution task_executions = 3;
}

// TaskInput represents the input data for a Task execution
message TaskInput {
  // Unique identifier for this input
  string input_id = 1;
  
  // Name of the task to execute
  string task_name = 2;
  
  // Plan execution that provides input to this task
  io.arl.proto.model.PlanExecution plan_execution = 3;
}
