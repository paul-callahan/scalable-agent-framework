spring:
  application:
    name: admin
  
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: admin-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/agentic}
    username: ${SPRING_DATASOURCE_USERNAME:agentic}
    password: ${SPRING_DATASOURCE_PASSWORD:agentic}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML

logging:
  level:
    com.pcallahan.agentic: DEBUG
    org.apache.kafka: INFO
    org.springframework.kafka: INFO
    org.flywaydb.core: INFO
    org.apache.kafka.clients.consumer.ConsumerConfig: WARN
    org.apache.kafka.clients.admin.AdminClientConfig: WARN
    org.apache.kafka.clients.producer.ProducerConfig: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

server:
  port: 8080