[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "executor"
version = "0.1.0"
description = "Executor microservice for agentic framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Agentic Framework Team", email = "team@agentic.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.13.5"
dependencies = [
    "aiokafka==0.11.0",
    "fastapi==0.111.0",
    "uvicorn[standard]==0.30.1",
    "structlog==24.1.0",
    "importlib-metadata==7.2.1",
    "pydantic==2.7.3",
    "-e ../common-py",
    "-e ../standalone-py",
]

[project.optional-dependencies]
dev = [
    "pytest==8.2.2",
    "pytest-asyncio==0.24.0",
    "pytest-cov==5.0.0",
    "black==24.7.0",
    "isort==5.13.2",
    "flake8==7.0.0",
    "mypy==1.11.0",
    "pre-commit==3.8.0",
]
test = [
    "pytest==8.2.2",
    "pytest-asyncio==0.24.0",
    "pytest-cov==5.0.0",
    "pytest-mock==3.14.0",
]

[project.urls]
Homepage = "https://github.com/agentic/framework"
Documentation = "https://agentic.dev/docs"
Repository = "https://github.com/agentic/framework"
"Bug Tracker" = "https://github.com/agentic/framework/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["executor*"]

[tool.setuptools.package-data]
executor = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["executor"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "google.protobuf.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=executor",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["executor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/pb/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
python = "3.13.5" 