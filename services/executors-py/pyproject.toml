[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "executors-py"
version = "0.1.0"
description = "Pure Kafka consumer/producer service for plan execution"
authors = [
    {name = "Paul Callahan", email = "paul@example.com"},
]
readme = "README.md"
requires-python = ">=3.13.5"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "aiokafka>=0.8.0",
    "structlog>=23.0.0",
    "protobuf>=4.0.0",
    "agentic-common",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "mockafka-py>=0.2.1",
]

[project.urls]
Homepage = "https://github.com/example/scalable-agent-framework"
Repository = "https://github.com/example/scalable-agent-framework"
Issues = "https://github.com/example/scalable-agent-framework/issues"

[tool.black]
line-length = 88
target-version = ['py313']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py313"
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C4", "UP"]
ignore = ["E501", "B008"]

[tool.uv.sources]
agentic-common = { path = "../common-py" }

[dependency-groups]
dev = [
    "mockafka-py>=0.2.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["executors"] 
